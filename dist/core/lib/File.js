"use strict";var __awaiter=(this&&this.__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}
return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}
function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}
function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}
step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __importDefault=(this&&this.__importDefault)||function(mod){return(mod&&mod.__esModule)?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});var fs_1=__importDefault(require("fs"));var https_1=__importDefault(require("https"));var replace_in_file_1=__importDefault(require("replace-in-file"));var child_process_1=require("child_process");class File{constructor(){this.fileTemplate={html:['index.html','','','',''],css:['style.css','styles','<!--CSS-->','<link rel="stylesheet" href="','">'],js:['script.js','scripts','<!--JS-->','<script src="','">'],};this.data=[['folder','src','/'],['file','index.html','/src/'],['file','index.html','/src/'],['folder','assets','/src/'],['folder','styles','/src/assets/'],['folder','scripts','/src/assets/'],['file','style.css','/src/assets/styles/'],['file','script.js','/src/assets/scripts/'],['folder','dist','/'],['file','.hierarchy.js','/'],]}
create(projectName='myProject',path,template,git){function gitInit(){child_process_1.exec('cd'+' '+process.cwd()+'/'+projectName+'&& git init')}
for(let i=0;i<this.data.length;i++){if(this.data[i][0]==='file'){let data='';https_1.default.get('https://raw.githubusercontent.com/srktnc/Hierarchy-CLI/master/Templates/'+this.data[i][1],res=>{res.setEncoding('utf8');let body='';res.on('data',data=>{body+=data});res.on('end',()=>{data=body;fs_1.default.writeFile(process.cwd()+'/'+projectName+this.data[i][2]+this.data[i][1],data,function(err){if(err)
console.log(err)})})})}
else if(this.data[i][0]==='folder'){fs_1.default.mkdir(process.cwd()+'/'+projectName+this.data[i][2]+this.data[i][1],{recursive:!0},err=>{if(err)
throw err})}}
if(git){gitInit()}}
add(file,type,link){function inject(fileName,value){return __awaiter(this,void 0,void 0,function*(){const hierarchyrc=require(process.cwd()+'/'+'.hierarchy.js');const options={files:process.cwd()+'/'+'src'+'/'+hierarchyrc.projectMain,from:value[2],to:value[2]+'\n\t'+value[3]+fileName+value[4],};try{const results=yield replace_in_file_1.default(options)}
catch(error){console.error('Error occurred:',error)}})}
for(let[key,value]of Object.entries(this.fileTemplate)){if(type===key){let data='';https_1.default.get('https://raw.githubusercontent.com/srktnc/Hierarchy-CLI/master/Templates/'+value[0],res=>{res.setEncoding('utf8');let body='';res.on('data',data=>{body+=data});res.on('end',()=>{data=body;fs_1.default.writeFile(process.cwd()+'/'+'src/assets/'+value[1]+'/'+file+'.'+type,data,function(err){if(err){console.log(err);return}
else{if(link){inject(file+'.'+type,value)}
return}})})})}}}
serve(port='1453'){return __awaiter(this,void 0,void 0,function*(){const hierarchyrc=require(process.cwd()+'/'+'.hierarchy.js');const myShellScript=child_process_1.exec('serve -l '+port+' src/');myShellScript.stdout.on('data',(data)=>{console.clear();console.log('Server stared: '+'http://localhost:'+port)});myShellScript.stderr.on('data',(data)=>{console.log('Please wait serve downloading');child_process_1.exec('npm i -g serve').stdout.on('data',(data)=>{child_process_1.exec('serve -l '+port+' src/').stdout.on('data',(data)=>{console.clear();console.log('Server stared: '+'http://localhost:'+port)})})})})}}
exports.default=File
